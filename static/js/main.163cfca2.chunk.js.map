{"version":3,"sources":["components/Alert.js","components/NavBar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","Props","alert","react_default","a","createElement","class","concat","type","role","msg","NavBar","props","className","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","speak","useSpeechSynthesis","Fragment","Heading","value","onChange","event","target","rows","onClick","newtext","toUpperCase","showAlert","toLowerCase","newText","split","join","length","App","setAlert","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.163cfca2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(Props) {\r\n  return (\r\n    Props.alert && <div class={`alert alert- ${Props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{Props.alert.type}: {Props.alert.msg}</strong>\r\n    \r\n    \r\n  </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              < li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\"></a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About us</Link>\r\n              </li> */}\r\n\r\n\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" onclick='http://www.example.com' type=\"submit\">Search</button>\r\n            </form> */}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\n","import React,{useState} from 'react';\r\nimport { useSpeechSynthesis } from \"react-speech-kit\";\r\nexport default function TextForm(props) \r\n{\r\n//Upper case conversion method\r\n  const handleUpCase = () =>\r\n   {\r\n    let newtext = text.toUpperCase()\r\n    setText(newtext)\r\n    props.showAlert('converted to UpperCase','Sucess')\r\n  }\r\n\r\n//Lower case conversion method\r\n  const handlelowCase = () => \r\n  {\r\n    let newtext = text.toLowerCase()\r\n    setText(newtext)\r\n    props.showAlert('converted to lowerCase','Sucess')\r\n  }\r\n//On change or adding text compare  method\r\n  const onChangeHandler = (event) => \r\n  {\r\n    setText(event.target.value)\r\n  }\r\n//Removing extra spaces method\r\n  const removeExtraSpace = () => \r\n  {\r\n    let newText= text.split(/[ ]+/)\r\n    setText(newText.join(\" \"));\r\n    props.showAlert('Extra space Removed','Sucess')\r\n  }\r\n  const textToSpeech = () => \r\n  {\r\n    props.showAlert('Speaking...','')\r\n    speak({ text: text })\r\n\r\n  }\r\n \r\n  \r\n  const [text, setText] = useState('');\r\n  const { speak } = useSpeechSynthesis();\r\n  return (\r\n    <>\r\n      <div className=\"mb-3\">\r\n        <h1>{props.Heading}</h1>\r\n\r\n        <textarea className=\"form-control\" value={text} onChange={onChangeHandler} id=\"mybox\" rows=\"7\"></textarea>\r\n        <button className='btn btn-primary mx-1 my-3' onClick={handleUpCase}>Convert To UpperCase</button>\r\n        <button className='btn btn-primary mx-1 my-3' onClick={handlelowCase}>Convert To LowerCase</button>\r\n        <button className='btn btn-primary mx-1 my-3' onClick={removeExtraSpace}>remove Extra space</button>\r\n        <button className='btn btn-primary mx-1 my-3' onClick={textToSpeech}>Read</button>\r\n\r\n       \r\n       \r\n      </div>\r\n      <div className=\"container\">\r\n        <h2>Text Summary </h2>\r\n        <p>word size - {text.split(\" \").length-1} and chracter size - {text.length}</p>\r\n        <h4>Preview </h4>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\n\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport NavBar from './components/NavBar';\nimport TextForm from './components/TextForm';\n// import {\n//   BrowserRouter as Router,\n \n//   Route,\n \n//   Routes\n// } from \"react-router-dom\";\n// import { Routes ,Route } from 'react-router-dom';\n\nfunction App() {\n\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n\n\n\n\n\n  return (\n    <>\n    \n    {/* <Router>\n        <NavBar title=\"TEXT UTILITIES TOOL \" />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n\n        \n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About />}> </Route>\n            <Route exact path=\"/\" element={<TextForm showAlert={showAlert} Heading=\"Enter Your Text Here\"/>}></Route>\n          </Routes>\n        </div>\n      </Router> */}\n \n<NavBar title=\" TEXT UTILITIES  \" />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n        <TextForm showAlert={showAlert} Heading=\"Enter Your Text Here\"/></div>\n    </>   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}